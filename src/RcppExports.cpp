// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// RidgeRegression_CG
Rcpp::List RidgeRegression_CG(arma::mat X, arma::vec y, double lambda, double t, double eps, int max_iteration);
RcppExport SEXP _RRopt_RidgeRegression_CG(SEXP XSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP tSEXP, SEXP epsSEXP, SEXP max_iterationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type max_iteration(max_iterationSEXP);
    rcpp_result_gen = Rcpp::wrap(RidgeRegression_CG(X, y, lambda, t, eps, max_iteration));
    return rcpp_result_gen;
END_RCPP
}
// RidgeRegression_ADMM
Rcpp::List RidgeRegression_ADMM(arma::mat X, arma::vec y, double lambda, double rho, int max_iter, double eps_abs, double eps_rel);
RcppExport SEXP _RRopt_RidgeRegression_ADMM(SEXP XSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP rhoSEXP, SEXP max_iterSEXP, SEXP eps_absSEXP, SEXP eps_relSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type eps_abs(eps_absSEXP);
    Rcpp::traits::input_parameter< double >::type eps_rel(eps_relSEXP);
    rcpp_result_gen = Rcpp::wrap(RidgeRegression_ADMM(X, y, lambda, rho, max_iter, eps_abs, eps_rel));
    return rcpp_result_gen;
END_RCPP
}
// RidgeRegression_LBFGS
Rcpp::List RidgeRegression_LBFGS(arma::mat X, arma::vec y, double lambda, int mem_size, int max_iterations, double g_epsilon, int past, double delta);
RcppExport SEXP _RRopt_RidgeRegression_LBFGS(SEXP XSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP mem_sizeSEXP, SEXP max_iterationsSEXP, SEXP g_epsilonSEXP, SEXP pastSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type mem_size(mem_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type max_iterations(max_iterationsSEXP);
    Rcpp::traits::input_parameter< double >::type g_epsilon(g_epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type past(pastSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(RidgeRegression_LBFGS(X, y, lambda, mem_size, max_iterations, g_epsilon, past, delta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RRopt_RidgeRegression_CG", (DL_FUNC) &_RRopt_RidgeRegression_CG, 6},
    {"_RRopt_RidgeRegression_ADMM", (DL_FUNC) &_RRopt_RidgeRegression_ADMM, 7},
    {"_RRopt_RidgeRegression_LBFGS", (DL_FUNC) &_RRopt_RidgeRegression_LBFGS, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_RRopt(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
